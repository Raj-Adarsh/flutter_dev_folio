name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if dotenv exists
        run: |
          if [[ -f dotenv ]]; then
            echo "Already present, ignoring."
          else
            : > dotenv
          fi

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Run analyze
        run: flutter analyze .

      - name: Build release
        run: flutter build web --web-renderer html --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
      - name: Debug current working directory packer build
        run: |
          pwd
          ls -la

  deploy-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages  # Change this to gh-pages

      - name: Debug current working directory of build
        run: |
          pwd
          ls -la

      - name: Configure git
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

      - name: Download website build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Debug current working directory and list content
        run: |
          pwd
          ls -la
          ls -alrt /home/runner/work/flutter_dev_folio/flutter_dev_folio
          ls -alrt /home/runner/work/flutter_dev_folio/flutter_dev_folio/build/web/*
      - name: Commit and Push
        env:
          WORKSPACE_PATH: /home/runner/work/flutter_dev_folio/flutter_dev_folio
        run: |
          # Check for changes. If none, skip deployment.
          if [ $(git status --porcelain=v1 2>/dev/null | wc -l) != "0" ] ; then
            # Safely remove old files, excluding the .git directory and other essentials.
            find . -maxdepth 1 ! -name '.git' ! -name '.' ! -name '..' -exec rm -rf {} \;
            # Copy the new build into the current directory.
            cp -r ${{ env.WORKSPACE_PATH }}/build/web/* .
            git add -f .
            git commit -m "gh-actions deployed a new build"
            git push --force https://github.com/${GITHUB_REPOSITORY}.git HEAD:gh-pages
          fi
